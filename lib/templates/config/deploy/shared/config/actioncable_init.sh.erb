#!/bin/sh
set -e

APP_ROOT=<%= current_path %>
PID=<%= fetch(:cable_pid) %>
CMD="cd $APP_ROOT; <%= fetch(:rbenv_prefix) %> bundle exec puma --pidfile $PID --state <%= fetch(:cable_state) %> -p <%= fetch(:cable_port) %> -e <%= fetch(:rails_env) %> --daemon <%= fetch(:cable_config_path) %> >> $APP_ROOT/log/cable.log 2>&1 &"
STOP_CMD="cd $APP_ROOT; RAILS_ENV=<%= fetch(:rails_env) %> <%= fetch(:rbenv_prefix) %> bundle exec pumactl -S <%= fetch(:cable_state) %> stop"
HALT_CMD="cd $APP_ROOT; RAILS_ENV=<%= fetch(:rails_env) %> <%= fetch(:rbenv_prefix) %> bundle exec pumactl -S <%= fetch(:cable_state) %> halt"
STATUS_CMD="cd $APP_ROOT; RAILS_ENV=<%= fetch(:rails_env) %> <%= fetch(:rbenv_prefix) %> bundle exec pumactl -S <%= fetch(:cable_state) %> status"
AS_USER=<%= fetch(:deploy_user) %>
# RBENV_ROOT=$HOME/.rbenv RBENV_VERSION=2.3.0 $HOME/.rbenv/bin/rbenv exec bundle exec sidekiqctl stop /home/deploy_solfanto/apps/gsw_production/shared/tmp/pids/sidekiq-0.pid 10

run () {
  if [ "$(id -un)" = "$AS_USER" ]; then
    eval $1
  else
    su -c "$1" - $AS_USER
  fi
}

sig () {
  test -s "$PID" && kill -$1 `cat $PID`
}

case "$1" in
  status)
    if test -s "$PID" && kill -0 `cat $PID`
    then
        echo "status...."
        run "$STATUS_CMD"
    else
        echo "not running"
    fi
    ;;
  halt)
    if test -s "$PID" && kill -0 `cat $PID`
    then
        echo "halt...."
        run "$HALT_CMD"
    else
        echo "not running"
    fi
    ;;
  start)
    sig 0 && echo >&2 "Already Running" && exit 0
    run "$CMD"
    ;;
  stop)
    if test -s "$PID" && kill -0 `cat $PID`
    then
        echo "stopping...."
        run "$STOP_CMD"
    else
        echo "not running"
    fi
    ;;
  restart)
    if test -s "$PID" && kill -0 `cat $PID`
    then
      echo "stopping...."
      run "$STOP_CMD"
    fi
    run "$CMD"    
    ;;
  *)
    echo >&2 "Usage: $0 <start|stop|halt|status|restart>"
    exit 1
    ;;
esac
